local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

-- ConfiguraciÃ³n
local PET_NAME = "Swift Samurai"
local ROCK_NAME = "Rock5M"
local PROTEIN_EGG_NAME = "ProteinEgg"
local BASE_REP_SPEED = 1000
local SWIFT_SAMURAI_REP_SPEED = 2000
local PROTEIN_EGG_INTERVAL = 30 * 60
local DOUBLE_REP_MULTIPLIER = 2
local REPS_PER_STEP = 100 -- CuÃ¡ntos reps enviar por lote
local STEP_DELAY = 0.1 -- Tiempo de espera entre lotes

-- Variables
local hasSwiftSamurai = false
local lastProteinEggTime = 0
local isScriptEnabled = false
local hasDoubleRepPass = true -- Simula el pase de doble rep

-- Funciones
local function equipPet()
    hasSwiftSamurai = false
    if LocalPlayer:FindFirstChild("petsFolder") and LocalPlayer.petsFolder:FindFirstChild("Unique") then
        for _, pet in pairs(LocalPlayer.petsFolder.Unique:GetChildren()) do
            if pet.Name == PET_NAME then
                ReplicatedStorage.rEvents.equipPetEvent:FireServer("equipPet", pet)
                hasSwiftSamurai = true
                break
            end
        end
    end
end

local function eatProteinEgg()
    if LocalPlayer:FindFirstChild("Backpack") then
        for _, item in pairs(LocalPlayer.Backpack:GetChildren()) do
            if item.Name == PROTEIN_EGG_NAME then
                ReplicatedStorage.rEvents.eatEvent:FireServer("eat", item)
                break
            end
        end
    end
end

local function hitRock()
    local rock = workspace:FindFirstChild(ROCK_NAME)
    if rock and HumanoidRootPart then
        HumanoidRootPart.CFrame = rock.CFrame * CFrame.new(0, 0, -5)
        ReplicatedStorage.rEvents.hitEvent:FireServer("hit", rock)
    end
end

local function doReps(repSpeed)
    for i = 1, repSpeed, REPS_PER_STEP do
        for _ = 1, math.min(REPS_PER_STEP, repSpeed - i + 1) do
            if LocalPlayer:FindFirstChild("muscleEvent") then
                LocalPlayer.muscleEvent:FireServer("rep")
            end
        end
        task.wait(STEP_DELAY)
    end
end

-- GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "MuscleScriptGUI"
screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

local toggleButton = Instance.new("TextButton")
toggleButton.Name = "ToggleButton"
toggleButton.Size = UDim2.new(0, 100, 0, 30)
toggleButton.Position = UDim2.new(0, 10, 0, 10)
toggleButton.BackgroundColor3 = Color3.new(0.4, 0.4, 0.4)
toggleButton.TextColor3 = Color3.new(1, 1, 1)
toggleButton.Text = "Iniciar"
toggleButton.Parent = screenGui

local function toggleScript()
    isScriptEnabled = not isScriptEnabled
    toggleButton.Text = isScriptEnabled and "Detener" or "Iniciar"
end

toggleButton.MouseButton1Click:Connect(toggleScript)

-- Bucle principal
task.spawn(function()
    equipPet()

    while true do
        if isScriptEnabled then
            local repSpeed = SWIFT_SAMURAI_REP_SPEED

            if hasDoubleRepPass then
                repSpeed = repSpeed * DOUBLE_REP_MULTIPLIER
            end

            doReps(repSpeed)

            if tick() - lastProteinEggTime >= PROTEIN_EGG_INTERVAL then
                eatProteinEgg()
                lastProteinEggTime = tick()
            end

            if tick() % 5 < 1 then
                hitRock()
            end
        end

        task.wait(0.1) -- espera mÃ­nima para no saturar
    end
end)

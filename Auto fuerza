local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
local UserInputService = game:GetService("UserInputService")

-- Configuración
local PET_NAME = "Swift Samurai"
local ROCK_NAME = "Rock5M"
local PROTEIN_EGG_NAME = "ProteinEgg"
local BASE_REP_SPEED = 20
local SWIFT_SAMURAI_REP_SPEED = 2000
local PROTEIN_EGG_INTERVAL = 30 * 60
local DOUBLE_REP_MULTIPLIER = 2 -- Multiplicador para el pase de doble repetición

-- Variables de estado
local hasSwiftSamurai = false
local lastProteinEggTime = 0
local isScriptEnabled = false
local hasDoubleRepPass = true -- Simulación del pase de doble repetición (cambia a false si no lo tienes)

-- Funciones de utilidad
local function equipPet()
    hasSwiftSamurai = false
    if LocalPlayer.petsFolder and LocalPlayer.petsFolder.Unique then
        for _, pet in pairs(LocalPlayer.petsFolder.Unique:GetChildren()) do
            if pet.Name == PET_NAME then
                ReplicatedStorage.rEvents.equipPetEvent:FireServer("equipPet", pet)
                hasSwiftSamurai = true
                break
            end
        end
    end
end

local function eatProteinEgg()
    if LocalPlayer.Backpack then
        for _, item in pairs(LocalPlayer.Backpack:GetChildren()) do
            if item.Name == PROTEIN_EGG_NAME then
                ReplicatedStorage.rEvents.eatEvent:FireServer("eat", item)
                break
            end
        end
    end
end

local function hitRock()
    local rock = workspace:FindFirstChild(ROCK_NAME)
    if rock then
        HumanoidRootPart.CFrame = rock.CFrame * CFrame.new(0, 0, -5)
        ReplicatedStorage.rEvents.hitEvent:FireServer("hit", rock)
    end
end

-- Bucle principal
task.spawn(function()
    equipPet()

    -- Toggle sin botón: Cambia el valor de `isScriptEnabled` al ejecutar
    isScriptEnabled = not isScriptEnabled  -- Cambia el estado de activación

    if isScriptEnabled then
        print("Script activado")
    else
        print("Script desactivado")
    end

    while true do
        if isScriptEnabled then
            local repSpeed = SWIFT_SAMURAI_REP_SPEED -- Siempre usa la velocidad del Swift Samurai

            -- Aplicar el multiplicador de doble repetición si el pase está activo
            if hasDoubleRepPass then
                repSpeed = repSpeed * DOUBLE_REP_MULTIPLIER
            end

            for _ = 1, repSpeed do
                LocalPlayer.muscleEvent:FireServer("rep")
            end

            if tick() - lastProteinEggTime >= PROTEIN_EGG_INTERVAL then
                eatProteinEgg()
                lastProteinEggTime = tick()
            end

            if tick() % 5 < 1 then
                hitRock()
            end
        end

        task.wait(0.000001)
    end
end)
